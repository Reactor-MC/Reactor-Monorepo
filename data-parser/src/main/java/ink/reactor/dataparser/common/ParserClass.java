package ink.reactor.dataparser.common;

import ink.reactor.fission.classes.JavaClass;
import ink.reactor.fission.classes.JavaClassType;
import ink.reactor.fission.commentary.MultiLineCommentary;
import lombok.NonNull;

import java.time.Instant;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;

public class ParserClass {

    public static final String JSON_COMBINED = "Jsons combined using \n  @see ink.reactor.dataparser.util.JsonCombiner";
    public static final String DATA_GENERATOR = ".json files generated with Data generators. \n  <a href=\"https://minecraft.wiki/w/Minecraft_Wiki:Projects/wiki.vg_merge/Data_Generators\">Data generators</a>";

    public static String combineCommentaries(final String... commentaries) {
        final StringBuilder builder = new StringBuilder();
        int i = 0;
        for (final String commentary : commentaries) {
            if (i++ != 0) {
                builder.append('\n');
            }
            builder.append(commentary);
        }
        return builder.toString();
    }

    @NonNull
    public static JavaClass immutableClass(final @NonNull String packageName, final @NonNull String className, @NonNull Class<?> generatorClass, final @NonNull String comentary) {
        final JavaClass javaClass = new JavaClass(packageName, className);
        javaClass.setFinal(true);
        javaClass.setClassType(JavaClassType.RECORD);
        javaClass.setCommentary(MultiLineCommentary.of(createAutogeneratedMessage(generatorClass.getName(), comentary)));
        return javaClass;
    }

    @NonNull
    public static String createAutogeneratedMessage(final @NonNull String className, final @NonNull String commentary) {
        final DateTimeFormatter formatter = DateTimeFormatter.ofPattern(
                "'Year:' yyyy'. Month:' MM'. Day:' dd'. Hour: 'HH':'mm':'ss"
        ).withZone(ZoneId.systemDefault());

        return
            """
            Autogenerated file. Please don't touch if you don't know :)
            Class generator: %class% (module data-parser)
            Date: %date% (24h format)
            <p>
            %commentary%"""
                .replace("%date%", formatter.format(Instant.now()))
                .replace("%class%", className)
                .replace("%commentary%", commentary);
    }
}
